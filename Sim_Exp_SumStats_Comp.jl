using Catalyst, Plots, Interpolations, JumpProcesses
using Statistics, Distributions, StatsBase
using CSV, DataFrames, FFTW, DSP
using SymbolicIndexingInterface: parameter_values, state_values
using SciMLStructures: Tunable, replace, replace!
using JLD2, UnPack
using XLSX

@unpack sim_sumstats,simn_sumstats,params = jldopen("VaryAct_8/noise_2kTr_8.jld2")
sim_sumstatsA = sim_sumstats
simn_sumstatsA = simn_sumstats
paramsA = params
@unpack sim_sumstats,simn_sumstats,params = JLD2.load("VaryAct_8_2/noise_2kTr_8_2.jld2")
sim_sumstatsA = vcat(sim_sumstatsA,sim_sumstats)
simn_sumstatsA = vcat(simn_sumstatsA,simn_sumstats)
paramsA = vcat(paramsA,params)
jldsave("VaryAct_8_All/noise_2kTr_8_All.jld2"; sim_sumstatsA,simn_sumstatsA,paramsA)

@unpack sim_sumstats,simn_sumstats,params = JLD2.load("VaryAct_8_3/noise_2kTr_8_3.jld2")
sim_sumstatsB = sim_sumstats
simn_sumstatsB = simn_sumstats
paramsB = params
sim_sumstatsA = vcat(sim_sumstatsA,sim_sumstatsB)
simn_sumstatsA = vcat(simn_sumstatsA,simn_sumstatsB)
paramsA = vcat(paramsA,paramsB)
jldsave("VaryAct_8_All/noise_2kTr_8_All.jld2"; sim_sumstatsA,simn_sumstatsA,paramsA)



@unpack ex_sumstats = jldopen("BrokenFeedbackExperimental.jld2");
@unpack sim_sumstatsA,simn_sumstatsA,paramsA = jldopen("VaryAct_8/noise_2kTr_8_All.jld2");
dir_path = "C:/Users/Strey Lab/Documents/GitHub/Analysis_of_SGC_Simulations/VaryAct_8_All2/"
histogram(params[:,1], bins=200,xlabel="kOnA",ylabel="counts",label="Mean:$(round(mean(params[:,1]), digits=2))")
savefig(joinpath(dir_path, "kOn.png"))
histogram(params[:,2], bins=200,xlabel="kOffA",ylabel="counts",label="Mean:$(round(mean(params[:,2]), digits=2))")
savefig(joinpath(dir_path, "kOff.png"))
histogram(params[:,3], bins=200,xlabel="kOnB",ylabel="counts",label="Mean:$(round(mean(params[:,3]), digits=2))")
savefig(joinpath(dir_path, "kOnFast.png"))
histogram(params[:,4], bins=200,xlabel="kOffB",ylabel="counts",label="Mean:$(round(mean(params[:,4]), digits=2))")
savefig(joinpath(dir_path, "kOffFast.png"))
histogram(params[:,5], bins=200,xlabel="kTrSlow",ylabel="counts",label="Mean:$(round(mean(params[:,5]), digits=2))")
savefig(joinpath(dir_path, "kTrSlow.png"))
histogram(params[:,6], bins=200,xlabel="kTrF",ylabel="counts",label="Mean:$(round(mean(params[:,6]), digits=2))")
savefig(joinpath(dir_path, "kTrF.png"))
histogram(params[:,7], bins=200,xlabel="kTl",ylabel="counts",label="Mean:$(round(mean(params[:,7]), digits=2))")
savefig(joinpath(dir_path, "kTl.png"))
histogram(params[:,8], bins=200,xlabel="dG",ylabel="counts",label="Mean:$(round(mean(params[:,8]), digits=2))")
savefig(joinpath(dir_path, "dG.png"))

plot(ex_sumstats[:,3],ex_sumstats[:,2], seriestype=:scatter, color=:red, xlabel="Variance", ylabel="Mean",label="exp")
plot!(simn_sumstats[:,3],simn_sumstats[:,2], seriestype=:scatter, color=:grey, xlabel="Variance", ylabel="Mean",label="sim")
savefig(joinpath(dir_path, "VarvMean.png"))
plot(ex_sumstats[:,3],ex_sumstats[:,1], seriestype=:scatter, color=:red, xlabel="Variance", ylabel="Slope",label="exp")
plot!(simn_sumstats[:,3],simn_sumstats[:,1], seriestype=:scatter, color=:grey, xlabel="Variance", ylabel="Slope",label="sim")
savefig(joinpath(dir_path, "VarvSlope.png"))
plot(ex_sumstats[:,4],ex_sumstats[:,1], seriestype=:scatter, color=:red, xlabel="Skewness", ylabel="Slope",label="exp")
plot!(simn_sumstats[:,4],simn_sumstats[:,1], seriestype=:scatter, color=:grey, xlabel="Skewness", ylabel="Slope",label="sim")
savefig(joinpath(dir_path, "SkewvSlope.png"))
plot(ex_sumstats[:,5],ex_sumstats[:,1], seriestype=:scatter, color=:red, xlabel="Kurtosis", ylabel="Slope",label="exp")
plot!(simn_sumstats[:,5],simn_sumstats[:,1], seriestype=:scatter, color=:grey, xlabel="Kurtosis", ylabel="Slope",label="sim")
savefig(joinpath(dir_path, "KurtvSlope.png"))
plot(ex_sumstats[:,6],ex_sumstats[:,1], seriestype=:scatter, color=:red, xlabel="k5", ylabel="Slope",label="exp")
plot!(simn_sumstats[:,6],simn_sumstats[:,1], seriestype=:scatter, color=:grey, xlabel="k5", ylabel="Slope",label="sim")
savefig(joinpath(dir_path, "KurtvSlope.png"))
plot(ex_sumstats[:,4],ex_sumstats[:,2], seriestype=:scatter, color=:red, xlabel="Skewness", ylabel="Mean",label="exp")
plot!(simn_sumstats[:,4],simn_sumstats[:,2], seriestype=:scatter, color=:grey, xlabel="Skewness", ylabel="Mean",label="sim")
savefig(joinpath(dir_path, "SkewvMean.png"))
plot(ex_sumstats[:,5],ex_sumstats[:,2], seriestype=:scatter, color=:red, xlabel="Kurtosis", ylabel="Mean",label="exp")
plot!(simn_sumstats[:,5],simn_sumstats[:,2], seriestype=:scatter, color=:grey, xlabel="Kurtosis", ylabel="Mean",label="sim")
savefig(joinpath(dir_path, "KurtvMean.png"))
plot(ex_sumstats[:,6],ex_sumstats[:,2], seriestype=:scatter, color=:red, xlabel="k5", ylabel="Mean",label="exp")
plot!(simn_sumstats[:,6],simn_sumstats[:,2], seriestype=:scatter, color=:grey, xlabel="k5", ylabel="Mean",label="sim")
savefig(joinpath(dir_path, "K5vMean.png"))
plot(ex_sumstats[:,7],ex_sumstats[:,2], seriestype=:scatter, color=:red, xlabel="PS1", ylabel="Mean",label="exp")
plot!(simn_sumstats[:,7],simn_sumstats[:,2], seriestype=:scatter, color=:grey, xlabel="PS1", ylabel="Mean",label="sim")
savefig(joinpath(dir_path, "PS1vMean.png"))
plot(ex_sumstats[:,7],ex_sumstats[:,3], seriestype=:scatter, color=:red, xlabel="PS1", ylabel="Variance",label="exp")
plot!(simn_sumstats[:,7],simn_sumstats[:,3], seriestype=:scatter, color=:grey, xlabel="PS1", ylabel="Variance",label="sim")
savefig(joinpath(dir_path, "PS1vVar.png"))
plot(params[:,8],simn_sumstats[:,2], seriestype=:scatter, xlabel="degG", ylabel="Mean")
savefig(joinpath(dir_path, "degGvMean.png"))
plot(params[:,7],simn_sumstats[:,2], seriestype=:scatter, xlabel="kTl", ylabel="Mean")
savefig(joinpath(dir_path, "kTlvMean.png"))
plot(params[:,6],simn_sumstats[:,2], seriestype=:scatter, xlabel="kTrF", ylabel="Mean")
savefig(joinpath(dir_path, "kTrFvMean.png"))
plot(params[:,5],simn_sumstats[:,2], seriestype=:scatter, xlabel="kTr", ylabel="Mean")
savefig(joinpath(dir_path, "kTrvMean.png"))
plot(params[:,4],simn_sumstats[:,2], seriestype=:scatter, xlabel="kFOff", ylabel="Mean")
savefig(joinpath(dir_path, "kFOffvMean.png"))
plot(params[:,3],simn_sumstats[:,2], seriestype=:scatter, xlabel="kFon", ylabel="Mean")
savefig(joinpath(dir_path, "kFonvMean.png"))
plot(params[:,2],simn_sumstats[:,2], seriestype=:scatter, xlabel="kOn", ylabel="Mean")
savefig(joinpath(dir_path, "konvMean.png"))
plot(params[:,1],simn_sumstats[:,2], seriestype=:scatter, xlabel="kOff", ylabel="Mean")
savefig(joinpath(dir_path, "koffvMean.png"))
plot(sim_sumstats[:,18],simn_sumstats[:,2], seriestype=:scatter, xlabel="Slow On time", ylabel="Mean")
savefig(joinpath(dir_path, "slowontimevMean.png"))
plot(sim_sumstats[:,19],simn_sumstats[:,2], seriestype=:scatter, xlabel="Fast On Time", ylabel="Mean")
savefig(joinpath(dir_path, "fastontimevMean.png"))
plot(sim_sumstats[:,20],simn_sumstats[:,2], seriestype=:scatter, xlabel="Off Time", ylabel="Mean")
savefig(joinpath(dir_path, "offtimevMean.png"))
plot(params[:,5],params[:,6], seriestype=:scatter, xlabel="kTr", ylabel="kTrF")
savefig(joinpath(dir_path, "kTrvkTrF.png"))
plot(params[:,6],params[:,7], seriestype=:scatter, xlabel="kTrF", ylabel="kTl")
savefig(joinpath(dir_path, "kTrFvkTl.png"))
plot(params[:,5],params[:,7], seriestype=:scatter, xlabel="kTr", ylabel="kTl")
savefig(joinpath(dir_path, "kTrvkTl.png"))

# Visually compare the summary statistics of the simulated time traces and the experimental time traces
bins=200
# slope
min_edge = min(minimum(simn_sumstats[:,1]), minimum(ex_sumstats[:,1]))
max_edge = max(maximum(simn_sumstats[:,1]), maximum(ex_sumstats[:,1]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,1], normalize=:probability, color=:red, bins=bin_edges, alpha=0.5,label="Exp Slope")
#histogram!(sim_sumstats[:,1],bins=6000,color=:grey,alpha=0.5,label="Sim Temp Means")
histogram!(simn_sumstats[:,1], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim Slope", ylabel="Probability", xlabel="Slope of GFP # (10^6)")
savefig(joinpath(dir_path, "SlopeHistExp_vs_Sim_Broken.png"))
#Mean
min_edge = min(minimum(simn_sumstats[:,2]), minimum(ex_sumstats[:,2]))
max_edge = max(maximum(simn_sumstats[:,2]), maximum(ex_sumstats[:,2]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,2], color=:red, normalize=:probability,  bins=bin_edges, alpha=0.5, label="Exp Temp Mean")
histogram!(simn_sumstats[:,2], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim Temp Mean", ylabel="Probability", xlabel="Temporal Mean of GFP # (10^6)") #,ylim=(0,0.125),xlim=(0,20)
savefig(joinpath(dir_path, "MeanHistExp_vs_Sim_Broken.png"))
# Variance
min_edge = min(minimum(simn_sumstats[:,3]), minimum(ex_sumstats[:,3]))
max_edge = max(maximum(simn_sumstats[:,3]), maximum(ex_sumstats[:,3]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,3], color=:red, normalize=:probability,  bins=bin_edges, alpha=0.5, label="Exp Temp Vars")
histogram!(simn_sumstats[:,3], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim Temp Vars", ylabel="Probability", xlabel="Temporal Variance of GFP # (10^6)") #,ylim=(0,0.125),xlim=(0,20)
savefig(joinpath(dir_path, "VarHistExp_vs_Sim_Broken.png.png"))
min_edge = min(minimum(simn_sumstats[:,3]), minimum(ex_sumstats[:,3]))
max_edge = max(maximum(simn_sumstats[:,3]), maximum(ex_sumstats[:,3]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,3], color=:red, normalize=:probability,  bins=bin_edges, alpha=0.5, label="Exp Temp Vars")
histogram!(simn_sumstats[:,3], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim Temp Vars", ylabel="Probability", xlabel="Temporal Variance of GFP # (10^6)",ylim=(0,0.125),xlim=(0,20))
savefig(joinpath(dir_path, "VarzHistExp_vs_Sim_Broken.png"))
# CV
min_edge = min(minimum(simn_sumstats[:,17]), minimum(ex_sumstats[:,17]))
max_edge = max(maximum(simn_sumstats[:,17]), maximum(ex_sumstats[:,17]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,17], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp Temp CV")
histogram!(simn_sumstats[:,17], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim Temp Vars", ylabel="Probability", xlabel="Temporal CV of GFP # (10^6)")
savefig(joinpath(dir_path, "CVExp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,17]), minimum(ex_sumstats[:,17]))
max_edge = max(maximum(simn_sumstats[:,17]), maximum(ex_sumstats[:,17]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,17], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp Temp CV")
histogram!(simn_sumstats[:,17], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim Temp Vars", ylabel="Probability", xlabel="Temporal CV of GFP # (10^6)",ylim=(0,0.175),xlim=(0,0.5))
savefig(joinpath(dir_path, "CVzExp_vs_Sim_Broken.png"))
#k3 - skewness
min_edge = min(minimum(simn_sumstats[:,4]), minimum(ex_sumstats[:,4]))
max_edge = max(maximum(simn_sumstats[:,4]), maximum(ex_sumstats[:,4]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,4], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k3")
histogram!(simn_sumstats[:,4], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k3", ylabel="Probability", xlabel="k3") #, ylim=(0,0.20), xlim=(-30,50)
savefig(joinpath(dir_path, "SkewExp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,4]), minimum(ex_sumstats[:,4]))
max_edge = max(maximum(simn_sumstats[:,4]), maximum(ex_sumstats[:,4]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,4], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k3")
histogram!(simn_sumstats[:,4], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k3", ylabel="Probability", xlabel="k3", ylim=(0,0.20), xlim=(-30,50))
savefig(joinpath(dir_path, "SkewzExp_vs_Sim_Broken.png"))
#k4 - Kurtosis
min_edge = min(minimum(simn_sumstats[:,5]), minimum(ex_sumstats[:,5]))
max_edge = max(maximum(simn_sumstats[:,5]), maximum(ex_sumstats[:,5]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,5],  color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k4")
histogram!(simn_sumstats[:,5], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k4", ylabel="Probability", xlabel="k4") #, ylim=(0,0.20), xlim=(-500,250)
savefig(joinpath(dir_path, "KurtExp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,5]), minimum(ex_sumstats[:,5]))
max_edge = max(maximum(simn_sumstats[:,5]), maximum(ex_sumstats[:,5]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,5],  color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k4")
histogram!(simn_sumstats[:,5], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k4", ylabel="Probability", xlabel="k4", ylim=(0,0.20), xlim=(-500,250))
savefig(joinpath(dir_path, "KurtzExp_vs_Sim_Broken.png"))
#k5
min_edge = min(minimum(simn_sumstats[:,6]), minimum(ex_sumstats[:,6]))
max_edge = max(maximum(simn_sumstats[:,6]), maximum(ex_sumstats[:,6]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,6],  color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k5")
histogram!(simn_sumstats[:,6], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k5", ylabel="Probability", xlabel="k5") #, ylim=(0,0.20),xlim=(-10000,5000)
savefig(joinpath(dir_path, "K5Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,6]), minimum(ex_sumstats[:,6]))
max_edge = max(maximum(simn_sumstats[:,6]), maximum(ex_sumstats[:,6]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,6],  color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k5")
histogram!(simn_sumstats[:,6], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k5", ylabel="Probability", xlabel="k5", ylim=(0,0.20),xlim=(-10000,5000))
savefig(joinpath(dir_path, "K5zExp_vs_Sim_Broken.png"))
#power spectrum
min_edge = min(minimum(simn_sumstats[:,7]), minimum(ex_sumstats[:,7]))
max_edge = max(maximum(simn_sumstats[:,7]), maximum(ex_sumstats[:,7]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,7], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k6")
histogram!(simn_sumstats[:,7], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k6", ylabel="Probability", xlabel="k6") #, ylim=(0,0.085),xlim=(0,10)
savefig(joinpath(dir_path, "PS1Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,7]), minimum(ex_sumstats[:,7]))
max_edge = max(maximum(simn_sumstats[:,7]), maximum(ex_sumstats[:,7]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,7], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k6")
histogram!(simn_sumstats[:,7], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k6", ylabel="Probability", xlabel="k6", ylim=(0,0.20),xlim=(0,20))
savefig(joinpath(dir_path, "PS1zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,8]), minimum(ex_sumstats[:,8]))
max_edge = max(maximum(simn_sumstats[:,8]), maximum(ex_sumstats[:,8]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,8], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k7")
histogram!(simn_sumstats[:,8], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k7", ylabel="Probability", xlabel="k7") #, ylim=(0,0.1),xlim=(0,3)
savefig(joinpath(dir_path, "PS2Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,8]), minimum(ex_sumstats[:,8]))
max_edge = max(maximum(simn_sumstats[:,8]), maximum(ex_sumstats[:,8]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,8], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k7")
histogram!(simn_sumstats[:,8], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k7", ylabel="Probability", xlabel="k7", ylim=(0,0.5),xlim=(0,10))
savefig(joinpath(dir_path, "PS2zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,9]), minimum(ex_sumstats[:,9]))
max_edge = max(maximum(simn_sumstats[:,9]), maximum(ex_sumstats[:,9]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,9], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k8")
histogram!(simn_sumstats[:,9], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k8", ylabel="Probability", xlabel="k8") #, ylim=(0,0.1),xlim=(0,2.25)
savefig(joinpath(dir_path, "PS3Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,9]), minimum(ex_sumstats[:,9]))
max_edge = max(maximum(simn_sumstats[:,9]), maximum(ex_sumstats[:,9]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,9], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k8")
histogram!(simn_sumstats[:,9], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k8", ylabel="Probability", xlabel="k8", ylim=(0,0.5),xlim=(0,8))
savefig(joinpath(dir_path, "PS3zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,10]), minimum(ex_sumstats[:,10]))
max_edge = max(maximum(simn_sumstats[:,10]), maximum(ex_sumstats[:,10]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,10], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k9")
histogram!(simn_sumstats[:,10], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k9", ylabel="Probability", xlabel="k9") #, ylim=(0,0.1),xlim=(0,1.75)
savefig(joinpath(dir_path, "PS4Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,10]), minimum(ex_sumstats[:,10]))
max_edge = max(maximum(simn_sumstats[:,10]), maximum(ex_sumstats[:,10]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,10], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k9")
histogram!(simn_sumstats[:,10], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k9", ylabel="Probability", xlabel="k9", ylim=(0,0.8),xlim=(0,8))
savefig(joinpath(dir_path, "PS4zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,11]), minimum(ex_sumstats[:,11]))
max_edge = max(maximum(simn_sumstats[:,11]), maximum(ex_sumstats[:,11]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,11], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k10")
histogram!(simn_sumstats[:,11], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k10", ylabel="Probability", xlabel="k10") #, ylim=(0,0.1),xlim=(0,1.75)
savefig(joinpath(dir_path, "PS5Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,11]), minimum(ex_sumstats[:,11]))
max_edge = max(maximum(simn_sumstats[:,11]), maximum(ex_sumstats[:,11]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,11], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k10")
histogram!(simn_sumstats[:,11], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k10", ylabel="Probability", xlabel="k10", ylim=(0,0.85),xlim=(0,8))
savefig(joinpath(dir_path, "PS5zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,12]), minimum(ex_sumstats[:,12]))
max_edge = max(maximum(simn_sumstats[:,12]), maximum(ex_sumstats[:,12]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,12], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k11")
histogram!(simn_sumstats[:,12], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k11", ylabel="Probability", xlabel="k11") #, ylim=(0,0.225),xlim=(0,3)
savefig(joinpath(dir_path, "PS6Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,12]), minimum(ex_sumstats[:,12]))
max_edge = max(maximum(simn_sumstats[:,12]), maximum(ex_sumstats[:,12]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,12], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k11")
histogram!(simn_sumstats[:,12], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k11", ylabel="Probability", xlabel="k11", ylim=(0,0.8),xlim=(0,8))
savefig(joinpath(dir_path, "PS6zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,13]), minimum(ex_sumstats[:,13]))
max_edge = max(maximum(simn_sumstats[:,13]), maximum(ex_sumstats[:,13]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,13], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k12")
histogram!(simn_sumstats[:,13], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k12", ylabel="Probability", xlabel="k12") #, ylim=(0,0.175),xlim=(0,1.25)
savefig(joinpath(dir_path, "PS7Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,13]), minimum(ex_sumstats[:,13]))
max_edge = max(maximum(simn_sumstats[:,13]), maximum(ex_sumstats[:,13]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,13], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k12")
histogram!(simn_sumstats[:,13], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k12", ylabel="Probability", xlabel="k12", ylim=(0,0.9),xlim=(0,8))
savefig(joinpath(dir_path, "PS7zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,14]), minimum(ex_sumstats[:,14]))
max_edge = max(maximum(simn_sumstats[:,14]), maximum(ex_sumstats[:,14]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,14], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k13")
histogram!(simn_sumstats[:,14], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k13", ylabel="Probability", xlabel="k13") #, ylim=(0,0.175),xlim=(0,1.25)
savefig(joinpath(dir_path, "PS8Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,14]), minimum(ex_sumstats[:,14]))
max_edge = max(maximum(simn_sumstats[:,14]), maximum(ex_sumstats[:,14]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,14], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k13")
histogram!(simn_sumstats[:,14], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k13", ylabel="Probability", xlabel="k13", ylim=(0,0.8),xlim=(0,8))
savefig(joinpath(dir_path, "PS8zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,15]), minimum(ex_sumstats[:,15]))
max_edge = max(maximum(simn_sumstats[:,15]), maximum(ex_sumstats[:,15]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,15], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k14")
histogram!(simn_sumstats[:,15], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k14", ylabel="Probability", xlabel="k14") #, ylim=(0,0.185),xlim=(0,1.85)
savefig(joinpath(dir_path, "PS9Exp_vs_Sim_Broken.png"))
min_edge = min(minimum(simn_sumstats[:,15]), minimum(ex_sumstats[:,15]))
max_edge = max(maximum(simn_sumstats[:,15]), maximum(ex_sumstats[:,15]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,15], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label="Exp k14")
histogram!(simn_sumstats[:,15], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k14", ylabel="Probability", xlabel="k14", ylim=(0,0.8),xlim=(0,8))
savefig(joinpath(dir_path, "PS9zExp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,16]), minimum(ex_sumstats[:,16]))
max_edge = max(maximum(simn_sumstats[:,16]), maximum(ex_sumstats[:,16]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,16], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label=" Exp k15")
histogram!(simn_sumstats[:,16], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k15", ylabel="Probability", xlabel="k15") #, ylim=(0,0.225),xlim=(0,2)
savefig(joinpath(dir_path, "PS10Exp_vs_Sim_Broken.png"))

min_edge = min(minimum(simn_sumstats[:,16]), minimum(ex_sumstats[:,16]))
max_edge = max(maximum(simn_sumstats[:,16]), maximum(ex_sumstats[:,16]))
bin_edges = range(min_edge, max_edge, length=bins)
histogram(ex_sumstats[:,16], color=:red, normalize=:probability, bins=bin_edges, alpha=0.5, label=" Exp k15")
histogram!(simn_sumstats[:,16], color=:grey, normalize=:probability, bins=bin_edges, alpha=0.5, label="Sim k15", ylabel="Probability", xlabel="k15", ylim=(0,0.8),xlim=(0,8))
savefig(joinpath(dir_path, "PS10zExp_vs_Sim_Broken.png"))